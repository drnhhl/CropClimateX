defaults:
  - geoid_pids_split

_target_: src.datasets.datamodule.DataModule
task: 'extremes_prep'
data_dir: ${paths.data_dir}/prep_datasets/npy_drought_landsat_uint16/
batch_size: 64 # Needs to be divisible by the number of devices (e.g., if in a distributed setup)
num_workers: 10
persistent_workers: False
drop_last: False
pin_memory: False
seed: ${seed}
return_meta_data: False
handle_nans: 'none'
stratified_sampler_args: {'name': 'usdm', 'dl_target_name': 'y', 'n_classes': 6, 'replacement': True}

bands:
  landsat8: ['B02', 'B03', 'B04', 'B05', 'B06']
  dem: ['elevation', 'slope', 'aspect', 'curvature']
pred_bands:
  usdm: ['usdm_mode',]

# transforms need to have the same order as the bands
transformations:
  x:
    reverse: # reverse uint16 scale
      _target_: src.datasets.transforms.MinMaxScaler
      data_min: 0
      data_max: 65534
      scale_min:
        _target_: src.datasets.dataset_stats.load_from_file
        fn: min_max.json
        data_dir: ${paths.data_dir}
        bands: ${data.bands}
        return_tuple: 0
      scale_max:
        _target_: src.datasets.dataset_stats.load_from_file
        fn: min_max.json
        data_dir: ${paths.data_dir}
        bands: ${data.bands}
        return_tuple: 1
      channel_dim: -3
    clip:
      _target_: src.datasets.transforms.Clip
      method: 'threshold'
      channel_dim: -3
      channels: [0,1,2,3,4]
      # z 2.5
      min: [0,0,0,0,0]
      max: [1.2589,1.1781,1.1776,1.1019,0.6327]
    scale:
      _target_: src.datasets.transforms.MinMaxScaler
      channel_dim: -3
      scale_min: 0
      scale_max: 1
      data_min:
        _target_: src.datasets.dataset_stats.load_from_file
        fn: min_max.json
        data_dir: ${paths.data_dir}
        bands: ${data.bands}
        return_tuple: 0
        overwrite:
          - [0,5]
          - ${data.transformations.x.clip.min}
          - ${data.transformations.x.clip.max} # overwrite the 5 values from RS with clip values
      data_max:
        _target_: src.datasets.dataset_stats.load_from_file
        fn: min_max.json
        data_dir: ${paths.data_dir}
        bands: ${data.bands}
        return_tuple: 1
        overwrite:
          - [0,5]
          - ${data.transformations.x.clip.min}
          - ${data.transformations.x.clip.max} # overwrite the 5 values from RS with clip values
    HandleNans:
      _target_: src.datasets.transforms.ReplaceValue
  y:
    HandleNans:
      _target_: src.datasets.transforms.ReplaceValue
    ToDType:
      _target_: src.datasets.transforms.ToDType
      dtype: 'long'
