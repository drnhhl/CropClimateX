# @package _global_

# to execute this experiment run:
# python train.py experiment=<name>
defaults:
  - /callbacks: default
  - override /model: metrics_drought # standard metrics for drought
  - override /data: prep_drought_landsat
  - override /trainer: default

ckpt_path: null

model:
  _target_: src.models.lightning_wrapper.ExtremesLightningWrapper
  net:
    _target_: src.models.base.TimeDistributed
    module: # predicts every time step seperatly
      _target_: src.models.cnn.ResNet
      variant: 18
      n_input_channels:
        _target_: src.utils.utils.get_length
        obj: ${data.bands}
      num_classes: ${model.num_classes}

  output_activation_function:
    _target_: torch.nn.Identity

  loss:
    _target_: torch.nn.CrossEntropyLoss
    reduction: none
  optimizer:
    _target_: torch.optim.Adam
    _partial_: true
    lr: 0.001
    weight_decay: 0.
  scheduler:
    # _target_: torch.optim.lr_scheduler.CosineAnnealingLR
    # _partial_: true
    # T_max: ${trainer.max_epochs}
    # eta_min: 1e-5
    _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
    _partial_: true
    mode: min
    cooldown: 1
    factor: 0.8
    patience: 4

seed:
    42
trainer:
    max_epochs: 60
    precision: 16-mixed
