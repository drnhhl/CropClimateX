num_classes: 6
metric_task_name: "multiclass"

loss_agg:
  train:
    _target_: torchmetrics.MeanMetric
  val:
    _target_: torchmetrics.MeanMetric
  test:
    _target_: torchmetrics.MeanMetric
metrics:
  train:
    f1:
      _target_: torchmetrics.F1Score
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: macro
    f1_per_class:
      _target_: torchmetrics.F1Score
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: none
    precision:
      _target_: torchmetrics.Precision
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: macro
    recall:
      _target_: torchmetrics.Recall
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: macro
    accuracy:
      _target_: torchmetrics.Accuracy
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: micro
  val:
    f1:
      _target_: torchmetrics.F1Score
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: macro
    f1_per_class:
      _target_: torchmetrics.F1Score
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: none
    precision:
      _target_: torchmetrics.Precision
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: macro
    recall:
      _target_: torchmetrics.Recall
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: macro
    accuracy:
      _target_: torchmetrics.Accuracy
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: micro
  test:
    f1:
      _target_: torchmetrics.F1Score
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: macro
    f1_per_class:
      _target_: torchmetrics.F1Score
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: none
    precision:
      _target_: torchmetrics.Precision
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: macro
    recall:
      _target_: torchmetrics.Recall
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: macro
    accuracy:
      _target_: torchmetrics.Accuracy
      task: ${model.metric_task_name}
      num_classes: ${model.num_classes}
      average: micro
best_metric_agg:
  metric_name: f1 # needs to be the metric name from the val metrics section
  monitor_mode: max
  metric:
    _target_: torchmetrics.MaxMetric

# compile model for faster training with pytorch 2.0
compile: false
